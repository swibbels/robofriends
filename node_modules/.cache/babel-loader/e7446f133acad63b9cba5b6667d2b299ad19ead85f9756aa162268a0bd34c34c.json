{"ast":null,"code":"import _classCallCheck from\"/Users/shanewibbelsman/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/shanewibbelsman/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/shanewibbelsman/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/shanewibbelsman/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import{robots}from'../robots';import Scroll from'../components/Scroll';import ErrorBoundary from'../components/ErrorBoundary';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.onSearchChange=function(event){_this.setState({searchfield:event.target.value});};_this.state={robots:[],searchfield:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({robots:robots});});}},{key:\"render\",value:function render(){var _this$state=this.state,robots=_this$state.robots,searchfield=_this$state.searchfield;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchfield.toLowerCase());});return!robots.length?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","robots","Scroll","ErrorBoundary","jsx","_jsx","jsxs","_jsxs","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","onSearchChange","event","setState","searchfield","target","value","state","_createClass","key","componentDidMount","_this2","fetch","then","response","json","users","render","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","className","searchChange"],"sources":["/Users/shanewibbelsman/Desktop/robofriends/src/containers/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport { robots } from '../robots';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: robots }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n            <h1>Loading</h1> :\n            (\n                <div className='tc' >\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundary>\n                    <CardList robots={filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n\n\nexport default App;"],"mappings":"gfAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,OAASC,MAAM,KAAQ,WAAW,CAClC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,4BAEb,CAAAC,GAAG,uBAAAC,UAAA,EAAAC,SAAA,CAAAF,GAAA,CAAAC,UAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,GAAA,EACL,SAAAA,IAAA,CAAc,KAAAK,KAAA,CAAAC,eAAA,MAAAN,GAAA,EACVK,KAAA,CAAAF,MAAA,CAAAI,IAAA,OAAOF,KAAA,CAaXG,cAAc,CAAG,SAACC,KAAK,CAAK,CACxBJ,KAAA,CAAKK,QAAQ,CAAC,CAAEC,WAAW,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAM,CAAC,CAAC,CACtD,CAAC,CAdGR,KAAA,CAAKS,KAAK,CAAG,CACTrB,MAAM,CAAE,EAAE,CACVkB,WAAW,CAAE,EACjB,CAAC,QAAAN,KAAA,CACL,CAACU,YAAA,CAAAf,GAAA,GAAAgB,GAAA,qBAAAH,KAAA,CAED,SAAAI,kBAAA,CAAoB,KAAAC,MAAA,MAChBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAC,SAAAC,QAAQ,QAAI,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACjCF,IAAI,CAAC,SAAAG,KAAK,QAAI,CAAAL,MAAI,CAACR,QAAQ,CAAC,CAAEjB,MAAM,CAAEA,MAAO,CAAC,CAAC,GAAC,CACrD,CAAC,GAAAuB,GAAA,UAAAH,KAAA,CAMD,SAAAW,OAAA,CAAS,CACL,IAAAC,WAAA,CAAgC,IAAI,CAACX,KAAK,CAAlCrB,MAAM,CAAAgC,WAAA,CAANhC,MAAM,CAAEkB,WAAW,CAAAc,WAAA,CAAXd,WAAW,CAC3B,GAAM,CAAAe,cAAc,CAAGjC,MAAM,CAACkC,MAAM,CAAC,SAAAC,KAAK,CAAG,CACzC,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpB,WAAW,CAACmB,WAAW,CAAC,CAAC,CAAC,CACvE,CAAC,CAAC,CACF,MAAO,CAACrC,MAAM,CAACuC,MAAM,cACjBnC,IAAA,OAAAoC,QAAA,CAAI,SAAO,CAAI,CAAC,cAEZlC,KAAA,QAAKmC,SAAS,CAAC,IAAI,CAAAD,QAAA,eACfpC,IAAA,OAAIqC,SAAS,CAAC,IAAI,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,cACnCpC,IAAA,CAACL,SAAS,EAAC2C,YAAY,CAAE,IAAI,CAAC3B,cAAe,CAAE,CAAC,cAChDX,IAAA,CAACH,MAAM,EAAAuC,QAAA,cACHpC,IAAA,CAACF,aAAa,EAAAsC,QAAA,cAClBpC,IAAA,CAACN,QAAQ,EAACE,MAAM,CAAEiC,cAAe,CAAE,CAAC,CACjB,CAAC,CACZ,CAAC,EACR,CACR,CACL,CAAC,WAAA1B,GAAA,GArCSV,SAAS,EAyC3B,cAAe,CAAAU,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}